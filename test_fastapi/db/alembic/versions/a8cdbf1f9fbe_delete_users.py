"""delete users

Revision ID: a8cdbf1f9fbe
Revises: 7623ff0c141d
Create Date: 2024-03-24 11:54:55.863362

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a8cdbf1f9fbe'
down_revision: Union[str, None] = '7623ff0c141d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('notes_fk_user_id__users', 'notes', type_='foreignkey')
    op.alter_column('notes', 'user_id',
               existing_type=sa.INTEGER(),
               type_=sa.String(),
               existing_nullable=False)
    op.drop_table('users_auth', schema='users')
    op.drop_table('users', schema='users')

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('notes', 'user_id')
    op.add_column('notes', sa.Column('user_id', sa.Integer(), nullable=False))
    op.create_table('users',
                    sa.Column('id', sa.Integer(),
                              sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=2147483647,
                                          cycle=False, cache=1), nullable=False),
                    sa.Column('email', sa.String(length=64), nullable=False),
                    sa.Column('is_approved', sa.Boolean(), server_default=sa.text('false'), nullable=False),
                    sa.Column('password_hash', sa.CHAR(length=64), nullable=False),
                    sa.Column('registered_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'),
                              nullable=False),
                    sa.PrimaryKeyConstraint('id', name=op.f('users_pk')),
                    sa.UniqueConstraint('email', name='users_unique_email'),
                    schema='users'
                    )
    op.create_table('users_auth',
                    sa.Column('id', sa.Integer(),
                              sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=2147483647,
                                          cycle=False, cache=1), nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('device', sa.String(length=200), nullable=False),
                    sa.Column('is_active', sa.Boolean(), nullable=False),
                    sa.Column('refresh_until', sa.TIMESTAMP(timezone=True), nullable=False),
                    sa.Column('valid_until', sa.TIMESTAMP(timezone=True), nullable=False),
                    sa.ForeignKeyConstraint(['user_id'], ['users.users.id'],
                                            name=op.f('users_auth_fk_user_id__users')),
                    sa.PrimaryKeyConstraint('id', name=op.f('users_auth_pk')),
                    sa.UniqueConstraint('user_id', 'device', name='users_auth_unique_user_id_device'),
                    schema='users'
                    )
    op.create_foreign_key('notes_fk_user_id__users', 'notes', 'users', ['user_id'], ['id'],
                          referent_schema='users')
    # ### end Alembic commands ###
